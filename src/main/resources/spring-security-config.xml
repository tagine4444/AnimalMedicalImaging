<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security.xsd">

	<http  pattern="/resources/**" security="none"  />
	
<!-- 	<http auto-config="true" use-expressions="true" > -->
<!-- 	<intercept-url pattern="/**" access="permitAll" />	 -->
<!--    		<intercept-url pattern="/login" access="isAnonymous()"/> --> 
		<!--  to remove any security authentification, replace the access="hasRole(....)" with  access="permitAll"  -->		
<!-- 		<intercept-url pattern="/v1/bookings**" access="hasRole('ROLE_com.expd.app.booking.SearchRequest.ACTION_EXECUTE')" /> -->
		

<!-- 		<intercept-url pattern="/v1/bookings**" access="permitAll" /> -->
<!-- 		<intercept-url pattern="/webcheck" access="permitAll" /> -->
<!-- 		<intercept-url pattern="/bigip.jsp" access="permitAll" /> -->
		
<!-- 		<intercept-url pattern="/**" access="hasRole('ROLE_com.expd.app.booking.SearchRequest.ACTION_EXECUTE')" /> -->
<!-- 		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" /> -->
<!-- 		<form-login  -->
<!-- 			login-processing-url="/static/j_spring_security_check" -->
<!-- 			login-page="/login"  -->
<!-- 			default-target-url="/serviceRequest"  -->
<!-- 			authentication-failure-url="/login?login_error=t"			 -->
<!-- 			always-use-default-target="true"   />	 -->
				
			
<!-- 			<access-denied-handler error-page="/login?login_error=t"/>	 -->
<!-- 	</http> -->
	
	
	<http auto-config="true">
	
		 <intercept-url pattern="/j_spring_security_check" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<intercept-url pattern="/serviceRequest*" access="ROLE_VET,ROLE_ADMIN,ROLE_TRANSCRIBER" />
		<intercept-url pattern="/requestDashboard*" access="ROLE_ADMIN,ROLE_TRANSCRIBER" />
		
		<form-login login-page="/login" 
			login-processing-url="/j_spring_security_check"
			default-target-url="/login?redirect"
			authentication-failure-url="/login?login_error=t" />
		<logout logout-success-url="/logout" />
	</http>



<!-- 	<authentication-manager> -->
<!-- 		<authentication-provider> -->
<!-- 			<user-service> -->
<!-- 				<user name="chuck" password="a" authorities="ROLE_ADMIN" /> -->
<!-- 				<user name="joann" password="a" authorities="ROLE_TRANSCRIBER" /> -->
<!-- 				<user name="vet1" password="a" authorities="ROLE_VET" /> -->
<!-- 				<user name="vet2" password="a" authorities="ROLE_VET" /> -->
<!-- 				<user name="vet3" password="a" authorities="ROLE_VET" /> -->
<!-- 			</user-service> -->
<!-- 		</authentication-provider> -->
<!-- 	</authentication-manager> -->

	<!-- Define sec and profiles authentication provider, a real app would 
		use an external provider (JDBC, LDAP, CAS, etc) -->

<!--  	<authentication-manager alias="authMgr" >  -->
<!--  		<authentication-provider ref="securityAndProfilesAuthenticationProvider"/> -->
<!--  		<authentication-provider ref="securityAndProfilesAuthenticationProviderBackup"/> -->
<!-- 	</authentication-manager>   -->



<!-- <beans:bean id="hospitalService"  -->
<!--  	class="com.bouacheria.ami.service.hospital.HospitalServiceImpl"> -->
<!-- </beans:bean> -->

<!-- <beans:bean id="userDetailsService" -->
<!--  class="com.bouacheria.ami.security.UserDetailsServiceImpl"> -->
<!--   <beans:property name="hospitalService" ref="hospitalService"/> -->
<!--   <beans:property name="assembler" ref="assembler"/> -->
<!-- </beans:bean> -->

<beans:bean id="daoAuthenticationProvider"
 class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
  <beans:property name="userDetailsService" ref="userDetailsService"/>
</beans:bean>

<beans:bean id="authenticationManager"
    class="org.springframework.security.authentication.ProviderManager">
  <beans:property name="providers">
    <beans:list>
      <beans:ref local="daoAuthenticationProvider" />
    </beans:list>
  </beans:property>
</beans:bean>

<authentication-manager>
  <authentication-provider user-service-ref="userDetailsService">
<!--     <password-encoder hash="md5"/> -->
  </authentication-provider>
</authentication-manager>

</beans:beans>
